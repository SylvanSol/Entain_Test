// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: racing/racing.proto

package racing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Derive this based on advertised_start_time (past ⇒ CLOSED, future ⇒ OPEN).
type RaceStatus int32

const (
	RaceStatus_UNSPECIFIED RaceStatus = 0
	RaceStatus_OPEN        RaceStatus = 1
	RaceStatus_CLOSED      RaceStatus = 2
)

// Enum value maps for RaceStatus.
var (
	RaceStatus_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "OPEN",
		2: "CLOSED",
	}
	RaceStatus_value = map[string]int32{
		"UNSPECIFIED": 0,
		"OPEN":        1,
		"CLOSED":      2,
	}
)

func (x RaceStatus) Enum() *RaceStatus {
	p := new(RaceStatus)
	*p = x
	return p
}

func (x RaceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RaceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_racing_racing_proto_enumTypes[0].Descriptor()
}

func (RaceStatus) Type() protoreflect.EnumType {
	return &file_racing_racing_proto_enumTypes[0]
}

func (x RaceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RaceStatus.Descriptor instead.
func (RaceStatus) EnumDescriptor() ([]byte, []int) {
	return file_racing_racing_proto_rawDescGZIP(), []int{0}
}

type ListRacesRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Filter        *ListRacesRequestFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Sort          *Sort                   `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRacesRequest) Reset() {
	*x = ListRacesRequest{}
	mi := &file_racing_racing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRacesRequest) ProtoMessage() {}

func (x *ListRacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_racing_racing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRacesRequest.ProtoReflect.Descriptor instead.
func (*ListRacesRequest) Descriptor() ([]byte, []int) {
	return file_racing_racing_proto_rawDescGZIP(), []int{0}
}

func (x *ListRacesRequest) GetFilter() *ListRacesRequestFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListRacesRequest) GetSort() *Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

// Response to ListRaces call.
type ListRacesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Races         []*Race                `protobuf:"bytes,1,rep,name=races,proto3" json:"races,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRacesResponse) Reset() {
	*x = ListRacesResponse{}
	mi := &file_racing_racing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRacesResponse) ProtoMessage() {}

func (x *ListRacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_racing_racing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRacesResponse.ProtoReflect.Descriptor instead.
func (*ListRacesResponse) Descriptor() ([]byte, []int) {
	return file_racing_racing_proto_rawDescGZIP(), []int{1}
}

func (x *ListRacesResponse) GetRaces() []*Race {
	if x != nil {
		return x.Races
	}
	return nil
}

// Filter for listing races.
type ListRacesRequestFilter struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	MeetingIds []int64                `protobuf:"varint,1,rep,packed,name=meeting_ids,json=meetingIds,proto3" json:"meeting_ids,omitempty"`
	// Add Visibility Filter
	OnlyVisible   bool `protobuf:"varint,2,opt,name=only_visible,json=onlyVisible,proto3" json:"only_visible,omitempty"` // If true only returns races where visible = true
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRacesRequestFilter) Reset() {
	*x = ListRacesRequestFilter{}
	mi := &file_racing_racing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRacesRequestFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRacesRequestFilter) ProtoMessage() {}

func (x *ListRacesRequestFilter) ProtoReflect() protoreflect.Message {
	mi := &file_racing_racing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRacesRequestFilter.ProtoReflect.Descriptor instead.
func (*ListRacesRequestFilter) Descriptor() ([]byte, []int) {
	return file_racing_racing_proto_rawDescGZIP(), []int{2}
}

func (x *ListRacesRequestFilter) GetMeetingIds() []int64 {
	if x != nil {
		return x.MeetingIds
	}
	return nil
}

func (x *ListRacesRequestFilter) GetOnlyVisible() bool {
	if x != nil {
		return x.OnlyVisible
	}
	return false
}

// Filter for listing races.
type Sort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`         //e.g "name", "number"
	Direction     string                 `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"` //e.g "asc" or "desc"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sort) Reset() {
	*x = Sort{}
	mi := &file_racing_racing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_racing_racing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_racing_racing_proto_rawDescGZIP(), []int{3}
}

func (x *Sort) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Sort) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

// A race resource.
type Race struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID represents a unique identifier for the race.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// MeetingID represents a unique identifier for the races meeting.
	MeetingId int64 `protobuf:"varint,2,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// Name is the official name given to the race.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Number represents the number of the race.
	Number int64 `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	// Visible represents whether or not the race is visible.
	Visible bool `protobuf:"varint,5,opt,name=visible,proto3" json:"visible,omitempty"`
	// AdvertisedStartTime is the time the race is advertised to run.
	AdvertisedStartTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=advertised_start_time,json=advertisedStartTime,proto3" json:"advertised_start_time,omitempty"`
	// Status of Race
	Status        RaceStatus `protobuf:"varint,7,opt,name=status,proto3,enum=racing.RaceStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Race) Reset() {
	*x = Race{}
	mi := &file_racing_racing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Race) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Race) ProtoMessage() {}

func (x *Race) ProtoReflect() protoreflect.Message {
	mi := &file_racing_racing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Race.ProtoReflect.Descriptor instead.
func (*Race) Descriptor() ([]byte, []int) {
	return file_racing_racing_proto_rawDescGZIP(), []int{4}
}

func (x *Race) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Race) GetMeetingId() int64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *Race) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Race) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Race) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *Race) GetAdvertisedStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AdvertisedStartTime
	}
	return nil
}

func (x *Race) GetStatus() RaceStatus {
	if x != nil {
		return x.Status
	}
	return RaceStatus_UNSPECIFIED
}

// Request for GetRace call.
type GetRaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRaceRequest) Reset() {
	*x = GetRaceRequest{}
	mi := &file_racing_racing_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRaceRequest) ProtoMessage() {}

func (x *GetRaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_racing_racing_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRaceRequest.ProtoReflect.Descriptor instead.
func (*GetRaceRequest) Descriptor() ([]byte, []int) {
	return file_racing_racing_proto_rawDescGZIP(), []int{5}
}

func (x *GetRaceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response to GetRace call.
type GetRaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Race          *Race                  `protobuf:"bytes,1,opt,name=race,proto3" json:"race,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRaceResponse) Reset() {
	*x = GetRaceResponse{}
	mi := &file_racing_racing_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRaceResponse) ProtoMessage() {}

func (x *GetRaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_racing_racing_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRaceResponse.ProtoReflect.Descriptor instead.
func (*GetRaceResponse) Descriptor() ([]byte, []int) {
	return file_racing_racing_proto_rawDescGZIP(), []int{6}
}

func (x *GetRaceResponse) GetRace() *Race {
	if x != nil {
		return x.Race
	}
	return nil
}

// Request to create a new Race.
type CreateRaceRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	MeetingId           int64                  `protobuf:"varint,1,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Number              int64                  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Visible             bool                   `protobuf:"varint,4,opt,name=visible,proto3" json:"visible,omitempty"`
	AdvertisedStartTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=advertised_start_time,json=advertisedStartTime,proto3" json:"advertised_start_time,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateRaceRequest) Reset() {
	*x = CreateRaceRequest{}
	mi := &file_racing_racing_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRaceRequest) ProtoMessage() {}

func (x *CreateRaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_racing_racing_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRaceRequest.ProtoReflect.Descriptor instead.
func (*CreateRaceRequest) Descriptor() ([]byte, []int) {
	return file_racing_racing_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRaceRequest) GetMeetingId() int64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *CreateRaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRaceRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CreateRaceRequest) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *CreateRaceRequest) GetAdvertisedStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AdvertisedStartTime
	}
	return nil
}

// Response contains the new Race ID.
type CreateRaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRaceResponse) Reset() {
	*x = CreateRaceResponse{}
	mi := &file_racing_racing_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRaceResponse) ProtoMessage() {}

func (x *CreateRaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_racing_racing_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRaceResponse.ProtoReflect.Descriptor instead.
func (*CreateRaceResponse) Descriptor() ([]byte, []int) {
	return file_racing_racing_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRaceResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_racing_racing_proto protoreflect.FileDescriptor

const file_racing_racing_proto_rawDesc = "" +
	"\n" +
	"\x13racing/racing.proto\x12\x06racing\x1a\x1fgoogle/protobuf/timestamp.proto\"l\n" +
	"\x10ListRacesRequest\x126\n" +
	"\x06filter\x18\x01 \x01(\v2\x1e.racing.ListRacesRequestFilterR\x06filter\x12 \n" +
	"\x04sort\x18\x02 \x01(\v2\f.racing.SortR\x04sort\"7\n" +
	"\x11ListRacesResponse\x12\"\n" +
	"\x05races\x18\x01 \x03(\v2\f.racing.RaceR\x05races\"\\\n" +
	"\x16ListRacesRequestFilter\x12\x1f\n" +
	"\vmeeting_ids\x18\x01 \x03(\x03R\n" +
	"meetingIds\x12!\n" +
	"\fonly_visible\x18\x02 \x01(\bR\vonlyVisible\":\n" +
	"\x04Sort\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x1c\n" +
	"\tdirection\x18\x02 \x01(\tR\tdirection\"\xf7\x01\n" +
	"\x04Race\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1d\n" +
	"\n" +
	"meeting_id\x18\x02 \x01(\x03R\tmeetingId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x16\n" +
	"\x06number\x18\x04 \x01(\x03R\x06number\x12\x18\n" +
	"\avisible\x18\x05 \x01(\bR\avisible\x12N\n" +
	"\x15advertised_start_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x13advertisedStartTime\x12*\n" +
	"\x06status\x18\a \x01(\x0e2\x12.racing.RaceStatusR\x06status\" \n" +
	"\x0eGetRaceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"3\n" +
	"\x0fGetRaceResponse\x12 \n" +
	"\x04race\x18\x01 \x01(\v2\f.racing.RaceR\x04race\"\xc8\x01\n" +
	"\x11CreateRaceRequest\x12\x1d\n" +
	"\n" +
	"meeting_id\x18\x01 \x01(\x03R\tmeetingId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06number\x18\x03 \x01(\x03R\x06number\x12\x18\n" +
	"\avisible\x18\x04 \x01(\bR\avisible\x12N\n" +
	"\x15advertised_start_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x13advertisedStartTime\"$\n" +
	"\x12CreateRaceResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id*3\n" +
	"\n" +
	"RaceStatus\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\b\n" +
	"\x04OPEN\x10\x01\x12\n" +
	"\n" +
	"\x06CLOSED\x10\x022\xcd\x01\n" +
	"\x06Racing\x12B\n" +
	"\tListRaces\x12\x18.racing.ListRacesRequest\x1a\x19.racing.ListRacesResponse\"\x00\x12:\n" +
	"\aGetRace\x12\x16.racing.GetRaceRequest\x1a\x17.racing.GetRaceResponse\x12C\n" +
	"\n" +
	"CreateRace\x12\x19.racing.CreateRaceRequest\x1a\x1a.racing.CreateRaceResponseB\tZ\a/racingb\x06proto3"

var (
	file_racing_racing_proto_rawDescOnce sync.Once
	file_racing_racing_proto_rawDescData []byte
)

func file_racing_racing_proto_rawDescGZIP() []byte {
	file_racing_racing_proto_rawDescOnce.Do(func() {
		file_racing_racing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_racing_racing_proto_rawDesc), len(file_racing_racing_proto_rawDesc)))
	})
	return file_racing_racing_proto_rawDescData
}

var file_racing_racing_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_racing_racing_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_racing_racing_proto_goTypes = []any{
	(RaceStatus)(0),                // 0: racing.RaceStatus
	(*ListRacesRequest)(nil),       // 1: racing.ListRacesRequest
	(*ListRacesResponse)(nil),      // 2: racing.ListRacesResponse
	(*ListRacesRequestFilter)(nil), // 3: racing.ListRacesRequestFilter
	(*Sort)(nil),                   // 4: racing.Sort
	(*Race)(nil),                   // 5: racing.Race
	(*GetRaceRequest)(nil),         // 6: racing.GetRaceRequest
	(*GetRaceResponse)(nil),        // 7: racing.GetRaceResponse
	(*CreateRaceRequest)(nil),      // 8: racing.CreateRaceRequest
	(*CreateRaceResponse)(nil),     // 9: racing.CreateRaceResponse
	(*timestamppb.Timestamp)(nil),  // 10: google.protobuf.Timestamp
}
var file_racing_racing_proto_depIdxs = []int32{
	3,  // 0: racing.ListRacesRequest.filter:type_name -> racing.ListRacesRequestFilter
	4,  // 1: racing.ListRacesRequest.sort:type_name -> racing.Sort
	5,  // 2: racing.ListRacesResponse.races:type_name -> racing.Race
	10, // 3: racing.Race.advertised_start_time:type_name -> google.protobuf.Timestamp
	0,  // 4: racing.Race.status:type_name -> racing.RaceStatus
	5,  // 5: racing.GetRaceResponse.race:type_name -> racing.Race
	10, // 6: racing.CreateRaceRequest.advertised_start_time:type_name -> google.protobuf.Timestamp
	1,  // 7: racing.Racing.ListRaces:input_type -> racing.ListRacesRequest
	6,  // 8: racing.Racing.GetRace:input_type -> racing.GetRaceRequest
	8,  // 9: racing.Racing.CreateRace:input_type -> racing.CreateRaceRequest
	2,  // 10: racing.Racing.ListRaces:output_type -> racing.ListRacesResponse
	7,  // 11: racing.Racing.GetRace:output_type -> racing.GetRaceResponse
	9,  // 12: racing.Racing.CreateRace:output_type -> racing.CreateRaceResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_racing_racing_proto_init() }
func file_racing_racing_proto_init() {
	if File_racing_racing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_racing_racing_proto_rawDesc), len(file_racing_racing_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_racing_racing_proto_goTypes,
		DependencyIndexes: file_racing_racing_proto_depIdxs,
		EnumInfos:         file_racing_racing_proto_enumTypes,
		MessageInfos:      file_racing_racing_proto_msgTypes,
	}.Build()
	File_racing_racing_proto = out.File
	file_racing_racing_proto_goTypes = nil
	file_racing_racing_proto_depIdxs = nil
}
